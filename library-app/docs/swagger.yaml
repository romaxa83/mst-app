basePath: /api
definitions:
  db.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      rows: {}
      sort:
        type: string
      totalPages:
        type: integer
      totalRows:
        type: integer
    type: object
  http.getAllListsResponse:
    properties:
      rows: {}
    type: object
  http.response:
    properties:
      message:
        type: string
    type: object
  input.CreateCategory:
    properties:
      desc:
        type: string
      title:
        maxLength: 256
        type: string
    required:
    - title
    type: object
  input.UpdateCategory:
    properties:
      active:
        type: boolean
      desc:
        type: string
      sort:
        type: integer
      title:
        maxLength: 256
        type: string
    type: object
  resources.CategoryResource:
    properties:
      active:
        type: boolean
      desc:
        type: string
      id:
        type: integer
      sort:
        type: integer
      title:
        type: string
    type: object
host: localhost:8060
info:
  contact: {}
  description: API Server for Library project
  title: Library App API
  version: "1.0"
paths:
  /api/categories:
    get:
      consumes:
      - application/json
      description: get all categories with pagination data
      operationId: get-all-category-pagination
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: search
        in: query
        name: search
        type: string
      - description: id
        in: query
        name: id
        type: integer
      - description: active
        in: query
        name: active
        type: boolean
      - description: sort
        in: query
        name: sort
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Pagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Get all categories paginator
      tags:
      - category
    post:
      consumes:
      - application/json
      description: create categories of books
      operationId: create-category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/input.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/resources.CategoryResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Create category
      tags:
      - category
  /api/categories/:id:
    delete:
      consumes:
      - application/json
      description: delete category of books (soft)
      operationId: delete-category
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete category (soft)
      tags:
      - category
    get:
      consumes:
      - application/json
      description: get one category by id
      operationId: get-one-category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resources.CategoryResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Get one category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: update category of books
      operationId: update-category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/input.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resources.CategoryResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Update category
      tags:
      - category
  /api/categories/list:
    get:
      consumes:
      - application/json
      description: get all categories list
      operationId: get-all-category-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/http.response'
      summary: Get all categories list
      tags:
      - category
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
  UsersAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
