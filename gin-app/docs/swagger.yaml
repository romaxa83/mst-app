basePath: /api/v1/
definitions:
  domains.TodoItem:
    properties:
      created_at:
        type: string
      description:
        type: string
      done:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    required:
    - title
    type: object
  domains.TodoList:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    required:
    - title
    type: object
  domains.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  domains.UpdateTodoListInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  v1.getAllItemsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domains.TodoItem'
        type: array
    type: object
  v1.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domains.TodoList'
        type: array
    type: object
  v1.refreshInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  v1.userSignInInput:
    properties:
      email:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.userSignUpInput:
    properties:
      email:
        maxLength: 64
        type: string
      name:
        maxLength: 64
        minLength: 2
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      phone:
        maxLength: 13
        type: string
    required:
    - email
    - name
    - password
    - phone
    type: object
host: localhost:8000
info:
  contact: {}
  description: REST API for Creatly App
  title: Creatly API
  version: "1.0"
paths:
  /api/v1/items:
    get:
      consumes:
      - application/json
      description: get all items by list
      operationId: get-all-items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getAllItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get All Items
      tags:
      - todo-items
  /api/v1/items/:id:
    delete:
      consumes:
      - application/json
      description: delete item (soft)
      operationId: delete-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Delete Item (soft)
      tags:
      - todo-items
    get:
      consumes:
      - application/json
      description: get one item by id
      operationId: get-one-items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get One Item
      tags:
      - todo-items
    put:
      consumes:
      - application/json
      description: update item
      operationId: update-item
      parameters:
      - description: update item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domains.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Update Item
      tags:
      - todo-items
  /api/v1/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - todo-lists
    post:
      consumes:
      - application/json
      description: create list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domains.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Create List
      tags:
      - todo-lists
  /api/v1/lists/:id:
    delete:
      consumes:
      - application/json
      description: delete list (soft)
      operationId: delete-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Delete List (soft)
      tags:
      - todo-lists
    get:
      consumes:
      - application/json
      description: get one list by id
      operationId: get-one-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.TodoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get One List
      tags:
      - todo-lists
    put:
      consumes:
      - application/json
      description: update list
      operationId: update-list
      parameters:
      - description: update list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domains.UpdateTodoListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Update List
      tags:
      - todo-lists
  /api/v1/lists/:id/items:
    post:
      consumes:
      - application/json
      description: create items for todo-list
      operationId: create-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domains.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Create Item
      tags:
      - todo-items
  /users/auth/refresh:
    post:
      consumes:
      - application/json
      description: user refresh tokens
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Refresh Tokens
      tags:
      - users-auth
  /users/sign-in:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignIn
      tags:
      - users-auth
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      operationId: user-sign-up
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignUp
      tags:
      - users-auth
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
  StudentsAuth:
    in: header
    name: Authorization
    type: apiKey
  UsersAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
